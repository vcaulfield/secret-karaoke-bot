import os, random, urllib3
from telegram import Update, Bot
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext

TOKEN = os.getenv("BOT_TOKEN")
participants = {}
pairing_done = False

def start(update: Update, context: CallbackContext):
    user = update.effective_user
    if user.id not in participants:
        participants[user.id] = {'username': user.username, 'target': None, 'songs_sent': False}
        update.message.reply_text("–¢—ã —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ –¢–∞–π–Ω–æ–º –ö–∞—Ä–∞–æ–∫–µ üé§")
    else:
        update.message.reply_text("–¢—ã —É–∂–µ –≤ –∏–≥—Ä–µ.")

def shuffle(update: Update, context: CallbackContext):
    global pairing_done
    if pairing_done:
        update.message.reply_text("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É–∂–µ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ.")
        return
    if len(participants) < 2:
        update.message.reply_text("–°–ª–∏—à–∫–æ–º –º–∞–ª–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.")
        return

    ids = list(participants.keys())
    random.shuffle(ids)
    for i in range(len(ids)):
        giver = ids[i]
        receiver = ids[(i + 1) % len(ids)]
        participants[giver]['target'] = receiver

    for giver_id, data in participants.items():
        target_id = data['target']
        target_username = participants[target_id]['username']
        context.bot.send_message(chat_id=giver_id,
            text=f"–¢—ã –∑–∞–≥–∞–¥—ã–≤–∞–µ—à—å –ø–µ—Å–Ω–∏ –¥–ª—è @{target_username}. –ù–∞–ø–∏—à–∏ 1‚Äì3 –ø–µ—Å–Ω–∏ –≤ –æ—Ç–≤–µ—Ç."
        )

    pairing_done = True
    update.message.reply_text("–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ø–æ–ª—É—á–∏–ª–∏ –∑–∞–¥–∞–Ω–∏—è!")

def handle_songs(update: Update, context: CallbackContext):
    user_id = update.effective_user.id
    if user_id in participants and participants[user_id]['target'] and not participants[user_id]['songs_sent']:
        songs = update.message.text
        target_id = participants[user_id]['target']
        context.bot.send_message(chat_id=target_id,
            text=f"üé∂ –¢–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç—å –æ–¥–Ω—É –∏–∑ —ç—Ç–∏—Ö –ø–µ—Å–µ–Ω: {songs}"
        )
        participants[user_id]['songs_sent'] = True
        update.message.reply_text("–ó–∞–¥–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    else:
        update.message.reply_text("–õ–∏–±–æ –∑–∞–¥–∞–Ω–∏–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –ª–∏–±–æ –µ—â—ë –Ω–µ –≤—Ä–µ–º—è.")

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("shuffle", shuffle))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_songs))
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
